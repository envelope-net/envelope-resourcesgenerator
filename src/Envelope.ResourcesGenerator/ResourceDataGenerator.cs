// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Envelope.ResourcesGenerator
{
    using Envelope.Extensions;
    using Envelope.Generator;
    using System.IO;
    using System.Linq;
    using System.Reflection;
    using System.Resources;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class ResourceDataGenerator : GeneratorBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            
            #line 12 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

	SetGenerationEnvironment(this.GenerationEnvironment);
	
	string targetProject = GetParam("TargetProject");
	string nmspace = GetParam("RootNamespace");
	var resFiles = GetParam<List<Envelope.Localization.ResourceFile>>("ResFiles");
	var resourcesClassName = GetParam("ResourcesClassName");
		
	StartNewFile(Path.Combine(targetProject, "Configuration"), resourcesClassName + ".cs");

            
            #line default
            #line hidden
            this.Write(@"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ");
            
            #line 31 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nmspace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n\tpublic static partial class Resources\r\n\t{\r\n\t\tprivate static ResourcesManage" +
                    "r _resMan;\r\n\t\tpublic static ResourcesManager ResourcesManager\r\n\t\t{\r\n\t\t\tget\r\n\t\t\t{" +
                    "\r\n\t\t\t\treturn _resMan ?? (_resMan = new ResourcesManager(typeof(");
            
            #line 40 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nmspace));
            
            #line default
            #line hidden
            this.Write(".");
            
            #line 40 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resourcesClassName));
            
            #line default
            #line hidden
            this.Write(").Assembly));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n");
            
            #line 45 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

	
	foreach (var resFile in resFiles)
	{
		var resStructure = resFile.GetConfigurationFolderStructure(targetProject);
		var resPath = resFile.GetConfigurationFolderPath("Configuration", targetProject);
		StartNewFile(resPath, resFile.Name + "Resource.cs");
		
		int ident = 0;


            
            #line default
            #line hidden
            this.Write(@"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ");
            
            #line 65 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(nmspace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n");
            
            #line 67 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

		foreach (var parentClass in resStructure)
		{

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 71 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident)));
            
            #line default
            #line hidden
            this.Write("public static partial class ");
            
            #line 71 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(parentClass));
            
            #line default
            #line hidden
            this.Write("\r\n\t");
            
            #line 72 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident)));
            
            #line default
            #line hidden
            this.Write("{\r\n");
            
            #line 73 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

			ident++;
		}
		string className = resFile.Name.ToCammelCase(removeUnderscores: false);

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 78 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident)));
            
            #line default
            #line hidden
            this.Write("public static partial class ");
            
            #line 78 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(className));
            
            #line default
            #line hidden
            this.Write("\r\n\t");
            
            #line 79 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident)));
            
            #line default
            #line hidden
            this.Write("{\r\n\t");
            
            #line 80 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("public static readonly System.Collections.Generic.IReadOnlyDictionary<string, Sys" +
                    "tem.Func<string>> Dictionary = new System.Collections.Generic.Dictionary<string," +
                    " System.Func<string>>\r\n\t");
            
            #line 81 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("{\r\n");
            
            #line 82 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

				int resCount = 0;
				foreach (var resource in resFile)
				{
					if (resource.NumericParameters.Count == 0)
					{

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 89 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("{ nameof(");
            
            #line 89 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resource.Name.ToCammelCase(removeUnderscores: false)));
            
            #line default
            #line hidden
            this.Write("), () => ");
            
            #line 89 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resource.Name.ToCammelCase(removeUnderscores: false)));
            
            #line default
            #line hidden
            this.Write(" },\r\n");
            
            #line 90 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

					}
					else
					{

            
            #line default
            #line hidden
            this.Write("\t\t");
            
            #line 95 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("{ nameof(");
            
            #line 95 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resource.Name.ToCammelCase(removeUnderscores: false)));
            
            #line default
            #line hidden
            this.Write("), () => ");
            
            #line 95 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resource.Name.ToCammelCase(removeUnderscores: false)));
            
            #line default
            #line hidden
            this.Write("_Message },\r\n");
            
            #line 96 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

					}
				}

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 100 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("};\r\n\r\n");
            
            #line 102 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

				foreach (var resource in resFile)
				{
					if (string.IsNullOrWhiteSpace(resource.Value))
					{
						throw new InvalidOperationException("Resource " + resFile.FullPath + " has invalid value for name " + resource.Name);
					}

					if (0 < resCount)
					{

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 114 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

					}

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 117 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("/// <summary>\r\n");
            
            #line 118 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

					var valueLines = Lines(resource.Value);
					foreach (var line in valueLines)
					{

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 123 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("/// ");
            
            #line 123 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Xml(line)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 124 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

					}

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 127 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("/// </summary>\r\n");
            
            #line 128 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

					if (resource.NumericParameters.Any())
					{

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 132 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("public static string ");
            
            #line 132 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resource.Name.ToCammelCase(removeUnderscores: false)));
            
            #line default
            #line hidden
            this.Write("_Message\r\n\t");
            
            #line 133 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 2)));
            
            #line default
            #line hidden
            this.Write("=> ResourcesManager.GetString(\"");
            
            #line 133 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resFile.GetResourceRelativeName(resourcesClassName)));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 133 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resource.Name));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 133 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(" ", valueLines)));
            
            #line default
            #line hidden
            this.Write("\");\r\n\t\r\n\t");
            
            #line 135 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("/// <summary>\r\n");
            
            #line 136 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

					valueLines = Lines(resource.Value);
					foreach (var line in valueLines)
					{

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 141 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("/// ");
            
            #line 141 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Xml(line)));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 142 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

					}

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 145 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("/// </summary>\r\n\t");
            
            #line 146 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("public static string ");
            
            #line 146 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resource.Name.ToCammelCase(removeUnderscores: false)));
            
            #line default
            #line hidden
            this.Write("(");
            
            #line 146 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(List("object p", resource.NumericParameters)));
            
            #line default
            #line hidden
            this.Write(", string defaultValue = \"");
            
            #line 146 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(" ", valueLines)));
            
            #line default
            #line hidden
            this.Write("\")\r\n\t");
            
            #line 147 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 2)));
            
            #line default
            #line hidden
            this.Write("=> string.Format(\r\n\t");
            
            #line 148 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 3)));
            
            #line default
            #line hidden
            this.Write("ResourcesManager.GetString(\"");
            
            #line 148 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resFile.GetResourceRelativeName(resourcesClassName)));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 148 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resource.Name));
            
            #line default
            #line hidden
            this.Write("\", defaultValue),\r\n\t");
            
            #line 149 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 3)));
            
            #line default
            #line hidden
            
            #line 149 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(List("p", resource.NumericParameters)));
            
            #line default
            #line hidden
            this.Write(");\r\n");
            
            #line 150 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

					}
					else
					{

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 155 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 1)));
            
            #line default
            #line hidden
            this.Write("public static string ");
            
            #line 155 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resource.Name.ToCammelCase(removeUnderscores: false)));
            
            #line default
            #line hidden
            this.Write("\r\n\t");
            
            #line 156 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident + 2)));
            
            #line default
            #line hidden
            this.Write("=> ResourcesManager.GetString(\"");
            
            #line 156 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resFile.GetResourceRelativeName(resourcesClassName)));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 156 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(resource.Name));
            
            #line default
            #line hidden
            this.Write("\", \"");
            
            #line 156 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(" ", valueLines)));
            
            #line default
            #line hidden
            this.Write("\");\r\n");
            
            #line 157 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

					}
					resCount++;
				}

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 162 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(ident)));
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 163 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"


		for (int i = resStructure.Count - 1; 0 <= i; i--)
		{

            
            #line default
            #line hidden
            this.Write("\t");
            
            #line 168 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetIdent(i)));
            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 169 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

		}

            
            #line default
            #line hidden
            this.Write("}\r\n");
            
            #line 173 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

	}
	Process();

            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        #line 177 "C:\Code\GitLab\En\src\Envelope.ResourcesGenerator\ResourceDataGenerator.tt"

	private string GetIdent(int count)
	{
		return GetIdent(null, count);
	}

	private string GetIdent(string baseIdent, int count)
	{
		StringBuilder sb = new StringBuilder(baseIdent ?? "");
		for (int i = 0; i < count; i++)
		{
			sb.Append("\t");
		}
		return sb.ToString();
	}

	private IEnumerable<string> Lines(string value)
	{
		return value.Split(new[] { Environment.NewLine }, StringSplitOptions.None);
	}

	private string Xml(string value)
	{
		return value.Replace("<", "&lt;").Replace(">", "&gt;");
	}

	private string List(IEnumerable<string> items)
	{
		return List(null, items);
	}

	private string List(string prefix, IEnumerable<string> items, string suffix = null)
	{
		return string.Join(", ", items.Select(i => prefix + i + suffix));
	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
